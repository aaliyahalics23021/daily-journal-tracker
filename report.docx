Daily Journal Tracker – Project Report
1. Project Title

Daily Journal Tracker

2. Objective

The purpose of this project is to create a daily journal tracker that allows users to log their thoughts, ideas, or notes every day. Each entry is automatically tracked using Git branches and commits, providing a versioned history of daily logs. Users can view, delete, and manage their previous entries easily.

Key Goals:

Maintain a record of daily activities or thoughts.

Demonstrate Git version control with branches and commits.

Provide a clean and interactive UI for managing entries.

3. Features

Add Entry:

Users can enter a title and write their thoughts.

Clicking Save stores the entry in the backend.

Auto Git Branch Creation:

Each entry creates a new Git branch named after the timestamp and entry title.

A commit is automatically made for each new entry.

Previous Entries View:

Users can see all previous entries listed in chronological order.

Delete Entry:

Users can delete entries if needed, which also removes them from the entries list.

Aesthetic UI:

Clean layout with text area for writing, buttons for saving/deleting, and a list view for entries.

Backend Management:

Python Flask server handles entry creation, deletion, and Git operations.

Each entry is stored as a .txt file inside backend/entries/.

4. Technologies Used
Layer	Technology / Tool
Frontend	HTML, CSS, JavaScript
Backend	Python, Flask
Version Control	Git, GitPython
IDE	VS Code
Deployment	GitHub repository
5. Folder Structure
daily-journal-tracker/
├── backend/
│   ├── app.py
│   └── entries/   ← All journal entries (.txt)
├── frontend/
│   ├── index.html
│   ├── style.css
│   └── app.js
├── report.docx   ← Project report


backend/app.py → Flask backend logic

backend/entries/ → Stores journal entry files

frontend/index.html → Webpage structure

frontend/style.css → Styles for the UI

frontend/app.js → Frontend interactivity

6. How to Run the Project Locally

Open VS Code terminal at the project root (daily-journal-tracker).

Install required packages:

pip install Flask GitPython


Start the backend server:

cd backend
python app.py


Open frontend/index.html in a browser.

Add, view, or delete entries from the UI.

Check terminal to see branches and commits created for each entry.

7. GitHub Repository Link

Project Repository: https://github.com/aaliyahalics23021/daily-journal-tracker

8. Conclusion

The Daily Journal Tracker successfully demonstrates:

Logging daily thoughts with a simple UI.

Automated Git version control for each entry.

Ability to view, delete, and manage past entries.

It combines Python backend, JavaScript frontend, and Git version control to create a functional and interactive project.

Future Enhancements:

User authentication for multiple users.

Cloud storage for entries.

Search and filter options for past entries.

9. References

Flask Documentation

GitPython Documentation

HTML/CSS/JS Basics